@page "/characters/delete/{id}"
@inject ApiService ApiService
@inject NavigationManager NavigationManager

<PageTitle>Characters</PageTitle>

<p>@successString</p>

@code {
	private string? successString;

	[Parameter] public string? id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		//try
		//{
		if ((string.IsNullOrEmpty(id)) | (!int.TryParse(id, out int parsedId)))

		{
			successString = "Invalid ID format";
		}
		else
		{
			try
			{
				Console.WriteLine($"Deleting character with ID: {parsedId}");
				await ApiService.DeleteCharacter(parsedId);
				successString = "Character deleted successfully";
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
				successString = "Character not found. Try Again.";
			}

		}
		//}
		//catch (Exception ex)
		//{
		//	Console.WriteLine(ex.Message);
		//}
		// finally
		// {
		StateHasChanged();
		// }
	}
}
