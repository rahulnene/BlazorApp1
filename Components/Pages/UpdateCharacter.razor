@page "/characters/update"
@inject ApiService ApiService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<PageTitle>Update a character</PageTitle>

<div>
    @if (SuccessfulUpdate != null)
    {
        @if (SuccessfulUpdate.Value)
        {
            <p>The update was a success!</p>
        }
        else
        {
            <p> The update failed. Try again.</p>
            <p>Error: @ErrorText</p>
        }
    }
    else
    {
        <h1> Enter Character Details</h1>

        <EditForm Model=@character OnSubmit="@Submit" FormName="UpdateCharacter">
            <div>
                <label for="Id">Id</label>
                <InputNumber id="Id" @bind-Value="character.Id" />
            </div>
            <div>
                <label for="Name">Name</label>
                <InputText id="Name" @bind-Value="character.Name" />
            </div>
            <div>
                <label for="Class">Class</label>
                <InputText id="Class" @bind-Value="character.Class" />
            </div>
            <div>
                <label for="HitPoints">HP</label>
                <InputNumber id="HitPoints" @bind-Value="character.HitPoints" />
            </div>
            <div>
                <label for="Strength">Strength</label>
                <InputNumber id="Strength" @bind-Value="character.Strength" />
            </div>
            <div>
                <label for="Defense">Defense</label>
                <InputNumber id="Defense" @bind-Value="character.Defense" />
            </div>
            <div>
                <label for="Intelligence">Intelligence</label>
                <InputNumber id="Intelligence" @bind-Value="character.Intelligence" />
            </div>
            <div>
                <button type="submit">Submit</button>
            </div>
        </EditForm>
    }
</div>


@code {
    UpdateCharacterDTO character = new UpdateCharacterDTO();
    bool? SuccessfulUpdate;
    string? ErrorText;
    async Task Submit()
    {
        try
        {
            await ApiService.UpdateCharacter(character);
            SuccessfulUpdate = true;
        }
        catch (Exception ex)
        {
            ErrorText = ex.ToString();
            SuccessfulUpdate = false;
        }
        StateHasChanged();
    }
}