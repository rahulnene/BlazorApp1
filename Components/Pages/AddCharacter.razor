@page "/characters/add"
@inject ApiService ApiService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<PageTitle>Characters</PageTitle>

<div>
    @if (AddedCharacterId != -1)
    {
        <p>The ID of your added character is: @AddedCharacterId</p>
    }
    else
    {
        <h1> Enter Character Details</h1>

        <EditForm Model=@character OnSubmit="@Submit" FormName="UpdateCharacter">
            <DataAnnotationsValidator />
            <FluentValidationSummary />
            <FluentStack>
                 <div>
                     <FluentTextField Autofocus=true Name="Character Name" Appearance="FluentInputAppearance.Filled" Label="Name" @bind-Value="character.Name" Required />
                 </div>
                 <div>
                     <FluentTextField Name="Character Class" Appearance="FluentInputAppearance.Filled" Label="Class" @bind-Value="character.Class" />
                 </div>
                 <div>
                     <FluentNumberField Name="Character Health" Appearance="FluentInputAppearance.Filled" Label="HP" HideStep=true @bind-Value="character.HitPoints" />
                 </div>
                 <div>
                     <FluentNumberField Name="Character Strength" Appearance="FluentInputAppearance.Filled" Label="Strength" HideStep=true @bind-Value="character.Strength" />
                 </div>
                 <div>
                     <FluentNumberField Name="Character Defense" Appearance="FluentInputAppearance.Filled" Label="Defense" HideStep=true @bind-Value="character.Defense" />
                 </div>
                 <div>
                     <FluentNumberField Name="Character Intelligence" Appearance="FluentInputAppearance.Filled" Label="Intelligence" HideStep=true @bind-Value="character.Intelligence" />
                 </div>
                 <div>
                     <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent">Submit</FluentButton>
                 </div>
             </FluentStack>
         </EditForm>
    }
</div>


@code {
    Character character = new Character();
    int AddedCharacterId = -1;
    async Task Submit()
    {
        AddedCharacterId = await ApiService.AddCharacter(character);
        StateHasChanged();
    }
}