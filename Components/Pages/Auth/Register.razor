@page "/register"
@inject ApiService ApiService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<PageTitle>Characters</PageTitle>

<div>
    @if (registered)
    {
        <p>Successfully Registered! Please Log In.</p>
    }
    else
    {
        <h1> Register for an Account!</h1>
        <EditForm Model=@user OnValidSubmit="@Submit" FormName="Register">
            <DataAnnotationsValidator />
            <FluentValidationSummary />
            <FluentStack Orientation="Orientation.Vertical">
                <div>
                    <FluentTextField Name="Email" Appearance="FluentInputAppearance.Filled"  Label="Email" @bind-Value="user.Email" Required />
                 </div>
                 <div>
                     <FluentTextField Name="Password" Appearance="FluentInputAppearance.Filled" Label="Password" @bind-Value="user.PasswordHash" Required />
                 </div>
                 <div>
                     <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent">Submit</FluentButton>
                 </div>
             </FluentStack>
         </EditForm>
    }
</div>


@code {
    IdentityUser user = new IdentityUser();
    bool registered = false;
    async Task Submit()
    {
        registered = await ApiService.Register(user);
        StateHasChanged();
    }
}